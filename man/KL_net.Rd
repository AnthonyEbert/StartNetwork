% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KL_net.R
\name{net_ss}
\alias{net_ss}
\alias{process_ss}
\alias{KL_ss}
\alias{KL_net}
\title{Generates list of degree sequences and summary statistics for a mechanistic model}
\usage{
net_ss(theta_m, replicates = 1000, sorted = TRUE, mech_net, lstat,
  lapply_opt = TRUE, ergm = FALSE)

process_ss(g, theta_s, mirror, type = "Bianconi", entropy_ss = FALSE)

KL_ss(theta_m, theta_s, mirror = TRUE, type = "Bianconi",
  entropy_ss = FALSE, ...)

KL_net(theta_m, ...)
}
\arguments{
\item{theta_m}{numeric mechanistic model parameters}

\item{replicates}{numeric number of replicates}

\item{sorted}{logical whether to consider the sorted or unsorted degree sequence as the integral statistic}

\item{mech_net}{function the mechanistic network simulator}

\item{lstat}{function computes the likelihood statistic}

\item{lapply_opt}{boolean internal}

\item{g}{output of `net_ss`}

\item{theta_s}{statistical parameter}

\item{mirror}{Boolean. whether base measure should be mirrored}

\item{type}{String: either "Liebenau" or "Bianconi"}
}
\description{
Generates list of degree sequences and summary statistics for a mechanistic model
}
\examples{

library(StartNetwork)
n = 15
replicates = 400

mech_net_triangles <- purrr::partial(mech_net_triangles_n, n = !!n)
lstat = function(x){length(igraph::triangles(x))/3}

x = net_ss(
 theta_m = 0.3,
 replicates = 50,
 mech_net = mech_net_triangles,
 lstat = lstat
)

y = process_ss(x, 0.5, mirror = TRUE)

reprocess_ss(y, 0.6)

}
